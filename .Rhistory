yn_ascao + yn_arch + yn_avr + yn_tvr +
yn_mvr + yn_cabg + yn_tevar + yn_myob +
yn_sept + incision_type + yn_cpb +
yn_circarr + yn_readmit + yn_aorta,
data = matching_data,
method = "full",
exact = c(
"yn_aorta",
"yn_coronary",
# "yn_aoroot" ,
# "yn_ascao",
# "yn_arch",
"yn_avr", # 400
"yn_tvr",
"yn_mvr",
# "yn_cabg" # 356
"yn_tevar", # 337
# "yn_myob",
"yn_sept"
),
max.controls = 1)
return(match_fit)
}
match_fit <- do_matching(matching_data)
matched_data <- match.data(match_fit)
matched_data$unit %>% table
balance_plot <- love.plot(match_fit, binary = "std", thresholds = c(m = .1))
balance_plot
balance_plot
# add in other colummns
full_matched_data <- matched_data %>%
left_join(aats_data[, c("pt_num", setdiff(names(aats_data), names(matched_data)))],
"pt_num")
matched_table1 <- make_table1(full_matched_data)
outcomes <- c("icu_los", "total_los", "yn_death30", "yn_morb30", "yn_stroke",
"yn_renf", "yn_reop", "yn_longvent", "yn_dswi", "yn_bldpd",
"rbc_total", "rbc_icu")
model_results <- map_dfr(outcomes,
function(outcome_var) {
in_dat <- full_matched_data %>%
select(outcome = !!sym(outcome_var),
unit,
all_of(names(matching_data)),
-pt_num)
if (grepl("yn", outcome_var)) {
in_dat1 <- in_dat %>%
mutate(outcome = outcome == "y")
model_fit <- glm(outcome ~ ., family = binomial, data = in_dat1)
results <- broom::tidy(model_fit)
} else {
model_fit <- lm(outcome ~ .,  data = in_dat)
results <- broom::tidy(model_fit)
}
return(results %>%
filter(grepl("unit", term)) %>%
mutate(outcome = outcome_var))
}) %>%
select(`Estimate (beta coefficient, J4 vs traditional)` = estimate,
`P-value` = p.value,
Outcome = outcome)
out <- list("Balance plot" = balance_plot,
"Matched table" = matched_table1,
"Model results" = model_results)
render_markdown_output(out,
markdown_title = glue::glue("AATS ICU Analysis {Sys.Date()}"),
output_file = "/tmp/aats.html")
balance_plot$data
do_matching <- function(matching_data) {
match_fit <- matchit(unit ~ age + sex + risk_type + yn_aoroot +
yn_ascao + yn_arch + yn_avr + yn_tvr +
yn_mvr + yn_cabg + yn_tevar + yn_myob +
yn_sept + incision_type + yn_cpb +
yn_circarr + yn_readmit,
data = matching_data,
method = "full",
exact = c(
# "yn_aorta",
# "yn_coronary",
"yn_aoroot" ,
"yn_ascao",
"yn_arch",
"yn_avr", # 400
"yn_tvr",
"yn_mvr",
"yn_cabg", # 356
"yn_tevar", # 337
"yn_myob",
"yn_sept"
),
max.controls = 1)
return(match_fit)
}
match_fit <- do_matching(matching_data)
matched_data <- match.data(match_fit)
matched_data$unit %>% table
do_matching <- function(matching_data) {
match_fit <- matchit(unit ~ age + sex + risk_type + yn_aoroot +
yn_ascao + yn_arch + yn_avr + yn_tvr +
yn_mvr + yn_cabg + yn_tevar + yn_myob +
yn_sept + incision_type + yn_cpb +
yn_circarr + yn_readmit,
data = matching_data,
method = "full",
exact = c(
# "yn_aorta",
# "yn_coronary",
"yn_aoroot" ,
"yn_ascao",
"yn_arch",
"yn_avr", # 400
"yn_tvr",
"yn_mvr",
"yn_cabg", # 356
"yn_tevar", # 337
"yn_myob",
"yn_sept"
))
return(match_fit)
}
matched_data <- match.data(match_fit)
match_fit <- do_matching(matching_data)
matched_data <- match.data(match_fit)
matched_data$unit %>% table
do_matching <- function(matching_data) {
match_fit <- matchit(unit ~ age + sex + risk_type +
# yn_aoroot +
# yn_ascao + yn_arch + yn_avr + yn_tvr +
# yn_mvr + yn_cabg + yn_tevar + yn_myob +
# yn_sept +
incision_type + yn_cpb +
yn_circarr
# + yn_readmit,
data = matching_data,
method = "full",
exact = c(
# "yn_aorta",
# "yn_coronary",
"yn_aoroot" ,
"yn_ascao",
"yn_arch",
"yn_avr", # 400
"yn_tvr",
"yn_mvr",
"yn_cabg", # 356
"yn_tevar", # 337
"yn_myob",
"yn_sept"
))
return(match_fit)
}
do_matching <- function(matching_data) {
match_fit <- matchit(unit ~ age + sex + risk_type +
# yn_aoroot +
# yn_ascao + yn_arch + yn_avr + yn_tvr +
# yn_mvr + yn_cabg + yn_tevar + yn_myob +
# yn_sept +
incision_type + yn_cpb +
# yn_readmit +
yn_circarr,
data = matching_data,
method = "full",
exact = c(
# "yn_aorta",
# "yn_coronary",
"yn_aoroot" ,
"yn_ascao",
"yn_arch",
"yn_avr", # 400
"yn_tvr",
"yn_mvr",
"yn_cabg", # 356
"yn_tevar", # 337
"yn_myob",
"yn_sept"
))
return(match_fit)
}
match_fit <- do_matching(matching_data)
matched_data <- match.data(match_fit)
matched_data$unit %>% table
?matchit
do_matching <- function(matching_data) {
match_fit <- matchit(unit ~ age + sex + risk_type +
yn_aoroot +
yn_ascao + yn_arch + yn_avr + yn_tvr +
yn_mvr + yn_cabg + yn_tevar + yn_myob +
yn_sept +
incision_type + yn_cpb +
yn_readmit +
yn_circarr,
data = matching_data,
method = "optimal",
exact = c(
# "yn_aorta",
# "yn_coronary",
"yn_aoroot" ,
"yn_ascao",
"yn_arch",
"yn_avr", # 400
"yn_tvr",
"yn_mvr",
"yn_cabg", # 356
"yn_tevar", # 337
"yn_myob",
"yn_sept"
))
return(match_fit)
}
match_fit <- do_matching(matching_data)
matched_data <- match.data(match_fit)
matched_data$unit %>% table
balance_plot <- love.plot(match_fit, binary = "std", thresholds = c(m = .1))
balance_plot
do_matching <- function(matching_data) {
match_fit <- matchit(unit ~ age + sex + risk_type +
yn_aoroot +
# yn_ascao + yn_arch + yn_avr +
yn_tvr +
yn_mvr +
# yn_cabg +
yn_tevar +
# yn_myob +
yn_sept +
incision_type + yn_cpb +
yn_readmit +
yn_circarr,
data = matching_data,
method = "optimal",
exact = c(
"yn_aorta",
"yn_coronary",
# "yn_aoroot" ,
# "yn_ascao",
# "yn_arch",
"yn_avr", # 400
"yn_tvr",
"yn_mvr",
# "yn_cabg", # 356
"yn_tevar", # 337
# "yn_myob",
"yn_sept"
))
return(match_fit)
}
match_fit <- do_matching(matching_data)
matched_data <- match.data(match_fit)
matched_data$unit %>% table
balance_plot <- love.plot(match_fit, binary = "std", thresholds = c(m = .1))
balance_plot
do_matching <- function(matching_data) {
match_fit <- matchit(unit ~ age + sex +
risk_type +
# yn_aoroot +
# yn_ascao + yn_arch +
yn_avr +
yn_tvr +
yn_mvr +
# yn_cabg +
yn_tevar +
# yn_myob +
yn_sept +
incision_type + yn_cpb +
# yn_readmit +
yn_circarr,
data = matching_data,
method = "optimal",
exact = c(
"yn_aorta",
"yn_coronary",
# "yn_aoroot" ,
# "yn_ascao",
# "yn_arch",
"yn_avr", # 400
"yn_tvr",
"yn_mvr",
# "yn_cabg", # 356
"yn_tevar", # 337
# "yn_myob",
"yn_sept"
))
return(match_fit)
}
match_fit <- do_matching(matching_data)
matched_data <- match.data(match_fit)
matched_data$unit %>% table
balance_plot <- love.plot(match_fit, binary = "std", thresholds = c(m = .1))
balance_plot
do_matching <- function(matching_data) {
match_fit <- matchit(unit ~ age + sex +
risk_type +
# yn_aoroot +
# yn_ascao + yn_arch +
yn_aorta +
# yn_cabg +
# yn_myob +
yn_coronary +
yn_avr +
yn_tvr +
yn_mvr +
yn_tevar +
yn_sept +
incision_type +
yn_cpb +
# yn_readmit +
yn_circarr,
data = matching_data,
method = "optimal",
exact = c(
"yn_aorta",
# "yn_cabg", # 356
# "yn_myob",
"yn_coronary",
# "yn_aoroot" ,
# "yn_ascao",
# "yn_arch",
"yn_avr", # 400
"yn_tvr",
"yn_mvr",
"yn_tevar", # 337
"yn_sept"
))
return(match_fit)
}
match_fit <- do_matching(matching_data)
matched_data <- match.data(match_fit)
matched_data$unit %>% table
balance_plot <- love.plot(match_fit, binary = "std", thresholds = c(m = .1))
balance_plot
balance_plot$data
# add in other colummns
full_matched_data <- matched_data %>%
left_join(aats_data[, c("pt_num", setdiff(names(aats_data), names(matched_data)))],
"pt_num")
matched_table1 <- make_table1(full_matched_data)
outcomes <- c("icu_los", "total_los", "yn_death30", "yn_morb30", "yn_stroke",
"yn_renf", "yn_reop", "yn_longvent", "yn_dswi", "yn_bldpd",
"rbc_total", "rbc_icu")
model_results <- map_dfr(outcomes,
function(outcome_var) {
in_dat <- full_matched_data %>%
select(outcome = !!sym(outcome_var),
unit,
all_of(names(matching_data)),
-pt_num)
if (grepl("yn", outcome_var)) {
in_dat1 <- in_dat %>%
mutate(outcome = outcome == "y")
model_fit <- glm(outcome ~ ., family = binomial, data = in_dat1)
results <- broom::tidy(model_fit)
} else {
model_fit <- lm(outcome ~ .,  data = in_dat)
results <- broom::tidy(model_fit)
}
return(results %>%
filter(grepl("unit", term)) %>%
mutate(outcome = outcome_var))
}) %>%
select(`Estimate (beta coefficient, J4 vs traditional)` = estimate,
`P-value` = p.value,
Outcome = outcome)
out <- list("Balance plot" = balance_plot,
"Matched table" = matched_table1,
"Model results" = model_results)
render_markdown_output(out,
markdown_title = glue::glue("AATS ICU Analysis {Sys.Date()}"),
output_file = "/tmp/aats.html")
do_matching <- function(matching_data) {
match_fit <- matchit(unit ~ age + sex +
risk_type +
yn_aoroot +
yn_ascao + yn_arch +
# yn_aorta +
yn_cabg +
yn_myob +
# yn_coronary +
yn_avr +
yn_tvr +
yn_mvr +
yn_tevar +
yn_sept +
incision_type +
yn_cpb +
# yn_readmit +
yn_circarr,
data = matching_data,
method = "optimal",
exact = c(
# "yn_aorta",
"yn_cabg", # 356
"yn_myob",
# "yn_coronary",
"yn_aoroot" ,
"yn_ascao",
"yn_arch",
"yn_avr", # 400
"yn_tvr",
"yn_mvr",
"yn_tevar", # 337
"yn_sept"
))
return(match_fit)
}
match_fit <- do_matching(matching_data)
matched_data <- match.data(match_fit)
matched_data$unit %>% table
balance_plot <- love.plot(match_fit, binary = "std", thresholds = c(m = .1))
balance_plot$data
# add in other colummns
full_matched_data <- matched_data %>%
left_join(aats_data[, c("pt_num", setdiff(names(aats_data), names(matched_data)))],
"pt_num")
matched_table1 <- make_table1(full_matched_data)
outcomes <- c("icu_los", "total_los", "yn_death30", "yn_morb30", "yn_stroke",
"yn_renf", "yn_reop", "yn_longvent", "yn_dswi", "yn_bldpd",
"rbc_total", "rbc_icu")
model_results <- map_dfr(outcomes,
function(outcome_var) {
in_dat <- full_matched_data %>%
select(outcome = !!sym(outcome_var),
unit,
all_of(names(matching_data)),
-pt_num)
if (grepl("yn", outcome_var)) {
in_dat1 <- in_dat %>%
mutate(outcome = outcome == "y")
model_fit <- glm(outcome ~ ., family = binomial, data = in_dat1)
results <- broom::tidy(model_fit)
} else {
model_fit <- lm(outcome ~ .,  data = in_dat)
results <- broom::tidy(model_fit)
}
return(results %>%
filter(grepl("unit", term)) %>%
mutate(outcome = outcome_var))
}) %>%
select(`Estimate (beta coefficient, J4 vs traditional)` = estimate,
`P-value` = p.value,
Outcome = outcome)
out <- list("Balance plot" = balance_plot,
"Matched table" = matched_table1,
"Model results" = model_results)
render_markdown_output(out,
markdown_title = glue::glue("AATS ICU Analysis {Sys.Date()}"),
output_file = "/tmp/aats.html")
balance_plot$data
source("~/personal/aats_icu_analysis/aats_icu_analysis.R")
aats_data <- load_data()
aats_data
matching_data <- aats_data %>%
select(-cpb,
-xclamp,
-circarr,
-icu_los,
-total_los,
-yn_death30,
-yn_morb30,
# -yn_aoroot,
# -yn_ascao,
# -yn_arch,
-yn_stroke,
-yn_renf,
-yn_reop,
-yn_longvent,
-yn_dswi,
-yn_bldpd,
-rbc_total,
-rbc_icu) %>%
mutate(unit = unit == "J4") %>%
mutate_if(is.character, ~ifelse(.x == "missing", "n", .x))
match_fit <- do_matching(matching_data)
matched_data <- match.data(match_fit)
matched_data$unit %>% table
balance_plot <- love.plot(match_fit, binary = "std", thresholds = c(m = .1))
balance_plot
# add in other colummns
full_matched_data <- matched_data %>%
left_join(aats_data[, c("pt_num", setdiff(names(aats_data), names(matched_data)))],
"pt_num")
matched_table1 <- make_table1(full_matched_data)
outcomes <- c("icu_los", "total_los", "yn_death30", "yn_morb30", "yn_stroke",
"yn_renf", "yn_reop", "yn_longvent", "yn_dswi", "yn_bldpd",
"rbc_total", "rbc_icu")
model_results <- map_dfr(outcomes,
function(outcome_var) {
in_dat <- full_matched_data %>%
select(outcome = !!sym(outcome_var),
unit,
all_of(names(matching_data)),
-pt_num)
if (grepl("yn", outcome_var)) {
in_dat1 <- in_dat %>%
mutate(outcome = outcome == "y")
model_fit <- glm(outcome ~ ., family = binomial, data = in_dat1)
results <- broom::tidy(model_fit)
} else {
model_fit <- lm(outcome ~ .,  data = in_dat)
results <- broom::tidy(model_fit)
}
return(results %>%
filter(grepl("unit", term)) %>%
mutate(outcome = outcome_var))
}) %>%
select(`Estimate (beta coefficient, J4 vs traditional)` = estimate,
`P-value` = p.value,
Outcome = outcome)
out <- list("Balance plot" = list(balance_plot,
balance_plot$data),
"Matched table" = matched_table1,
"Model results" = model_results)
render_markdown_output(out,
markdown_title = glue::glue("AATS ICU Analysis {Sys.Date()}"),
output_file = "/tmp/aats.html")
